{
  "compilerOptions": {
    "composite": true,                    /* Enable constraints that allow a TypeScript project to be used with project references. */
    "target": "esnext",                          /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
    "module": "esnext",                     /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    "outDir": "build",     /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    "baseUrl": "./",                       /* Base directory to resolve non-absolute module names. */
    "declaration": true,                   /* Generates corresponding '.d.ts' file. */
    "strict": true,                           /* Enable all strict type-checking options. */
    "moduleResolution": "node",            /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "esModuleInterop": true,                  /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "experimentalDecorators": true,        /* Enables experimental support for ES7 decorators. */
    "emitDecoratorMetadata": true,         /* Enables experimental support for emitting type metadata for decorators. */
    "skipLibCheck": true,                     /* Skip type checking of declaration files. */
    "forceConsistentCasingInFileNames": true,  /* Disallow inconsistently-cased references to the same file. */
    "resolveJsonModule": true,               /* Include modules imported with '.json' extension. */
    "rootDirs": ["modules","server.ts", "compil"], /* List of root folders whose combined content represents the structure of the project at runtime. */
    "paths": {
      "@files/*": ["files/*"],
    },
  }
}