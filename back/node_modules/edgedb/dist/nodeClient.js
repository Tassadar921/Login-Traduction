"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createHttpClient = exports.createClient = void 0;
const baseClient_1 = require("./baseClient");
const browserClient_1 = require("./browserClient");
const conUtils_server_1 = require("./conUtils.server");
const options_1 = require("./options");
const rawConn_1 = require("./rawConn");
class ClientPool extends baseClient_1.BaseClientPool {
    constructor() {
        super(...arguments);
        Object.defineProperty(this, "isStateless", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: false
        });
        Object.defineProperty(this, "_connectWithTimeout", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: rawConn_1.RawConnection.connectWithTimeout.bind(rawConn_1.RawConnection)
        });
    }
}
function createClient(options) {
    return new baseClient_1.Client(new ClientPool(conUtils_server_1.parseConnectArguments, typeof options === "string" ? { dsn: options } : options !== null && options !== void 0 ? options : {}), options_1.Options.defaults());
}
exports.createClient = createClient;
function createHttpClient(options) {
    return new baseClient_1.Client(new browserClient_1.FetchClientPool(conUtils_server_1.parseConnectArguments, typeof options === "string" ? { dsn: options } : options !== null && options !== void 0 ? options : {}), options_1.Options.defaults());
}
exports.createHttpClient = createHttpClient;
